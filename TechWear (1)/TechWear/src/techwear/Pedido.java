
package techwear;

import java.awt.Color;
import java.awt.Dimension;
import java.awt.Toolkit;
import java.util.ArrayList;
import javax.swing.DefaultListModel;
import java.time.LocalDate;
import java.time.format.DateTimeFormatter;
import java.sql.ResultSet;
import javax.swing.DefaultComboBoxModel;

public class Pedido extends javax.swing.JFrame {

    ArrayList<Object[]> items;
    /**
     * Creates new form Pedido
     */
    public Pedido() {
        initComponents();
        
        Color cor=new Color(255,255,255,150);
        painelPIX.setBackground(cor);
        painelCartao.setBackground(cor);
        painelCEP.setBackground(cor);
        jRadioButton1.setBackground(new Color(255,255,255,100));
        jRadioButton2.setBackground(new Color(255,255,255,100));
        
        Toolkit tk = Toolkit.getDefaultToolkit();
        Dimension tamanhoTela = tk.getScreenSize();
        
        int width=Math.min(tamanhoTela.width,1440);
        int height=Math.min(tamanhoTela.height,900);
        
        setSize(width,height);
        setLocationRelativeTo(null);
        setResizable(false);
        
        int cX=(getWidth()-container.getWidth());
        int cY=(getHeight()-container.getHeight());
        container.setBounds(cX,cY,container.getWidth(),container.getHeight());
        jLabel11.setBounds(cX,cY,jLabel11.getWidth(),jLabel11.getHeight());
        image.setBounds(0,0,getWidth(),getHeight());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel11 = new javax.swing.JLabel();
        container = new javax.swing.JPanel();
        painelConfirmar = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList<>();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        labelError = new javax.swing.JLabel();
        containerPagamento = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jRadioButton1 = new javax.swing.JRadioButton();
        jRadioButton2 = new javax.swing.JRadioButton();
        painelPIX = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        painelCartao = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jFormattedTextField2 = new javax.swing.JFormattedTextField();
        jFormattedTextField3 = new javax.swing.JFormattedTextField();
        jFormattedTextField4 = new javax.swing.JFormattedTextField();
        jComboBox1 = new javax.swing.JComboBox<>();
        jLabel9 = new javax.swing.JLabel();
        painelCEP = new javax.swing.JPanel();
        jFormattedTextField1 = new javax.swing.JFormattedTextField();
        jLabel8 = new javax.swing.JLabel();
        image = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                formComponentShown(evt);
            }
        });
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel11.setFont(new java.awt.Font("Gill Sans MT", 0, 36)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(255, 255, 255));
        jLabel11.setText("Confirmar seu Pedido");
        getContentPane().add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 20, -1, -1));

        container.setOpaque(false);

        painelConfirmar.setOpaque(false);

        jLabel2.setFont(new java.awt.Font("Gill Sans MT", 0, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Itens:");

        jList1.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 12)); // NOI18N
        jList1.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                jList1ComponentShown(evt);
            }
        });
        jScrollPane1.setViewportView(jList1);

        jButton1.setFont(new java.awt.Font("Gill Sans MT", 0, 18)); // NOI18N
        jButton1.setText("Confirmar Pedido");
        jButton1.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jButton1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setFont(new java.awt.Font("Gill Sans MT", 0, 18)); // NOI18N
        jButton2.setText("Voltar ao Carrinho");
        jButton2.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jButton2.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        labelError.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 14)); // NOI18N
        labelError.setForeground(new java.awt.Color(255, 51, 51));

        javax.swing.GroupLayout painelConfirmarLayout = new javax.swing.GroupLayout(painelConfirmar);
        painelConfirmar.setLayout(painelConfirmarLayout);
        painelConfirmarLayout.setHorizontalGroup(
            painelConfirmarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(painelConfirmarLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(labelError, javax.swing.GroupLayout.DEFAULT_SIZE, 258, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(painelConfirmarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(painelConfirmarLayout.createSequentialGroup()
                    .addContainerGap()
                    .addGroup(painelConfirmarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jLabel2)
                        .addComponent(jScrollPane1)
                        .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );
        painelConfirmarLayout.setVerticalGroup(
            painelConfirmarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, painelConfirmarLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(labelError, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(21, 21, 21))
            .addGroup(painelConfirmarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(painelConfirmarLayout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jLabel2)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 239, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(50, 50, 50)
                    .addComponent(jButton2)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(jButton1)
                    .addContainerGap(28, Short.MAX_VALUE)))
        );

        containerPagamento.setOpaque(false);
        containerPagamento.setPreferredSize(new java.awt.Dimension(500, 100));

        jLabel3.setFont(new java.awt.Font("Gill Sans MT", 0, 18)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Selecione um método de pagamento:");

        jRadioButton1.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 12)); // NOI18N
        jRadioButton1.setForeground(new java.awt.Color(255, 255, 255));
        jRadioButton1.setText("PIX");
        jRadioButton1.setContentAreaFilled(false);
        jRadioButton1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jRadioButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton1ActionPerformed(evt);
            }
        });

        jRadioButton2.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 12)); // NOI18N
        jRadioButton2.setForeground(new java.awt.Color(255, 255, 255));
        jRadioButton2.setText("Cartão");
        jRadioButton2.setContentAreaFilled(false);
        jRadioButton2.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jRadioButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton2ActionPerformed(evt);
            }
        });

        painelPIX.setBackground(new java.awt.Color(255, 255, 255));
        painelPIX.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel4.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 12)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Digite abaixo sua chave:");

        javax.swing.GroupLayout painelPIXLayout = new javax.swing.GroupLayout(painelPIX);
        painelPIX.setLayout(painelPIXLayout);
        painelPIXLayout.setHorizontalGroup(
            painelPIXLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
            .addGroup(painelPIXLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(painelPIXLayout.createSequentialGroup()
                    .addContainerGap()
                    .addGroup(painelPIXLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(painelPIXLayout.createSequentialGroup()
                            .addComponent(jLabel4)
                            .addGap(0, 299, Short.MAX_VALUE))
                        .addComponent(jTextField1))
                    .addContainerGap()))
        );
        painelPIXLayout.setVerticalGroup(
            painelPIXLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 73, Short.MAX_VALUE)
            .addGroup(painelPIXLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(painelPIXLayout.createSequentialGroup()
                    .addGap(8, 8, 8)
                    .addComponent(jLabel4)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );

        painelCartao.setBackground(new java.awt.Color(255, 255, 255));
        painelCartao.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel7.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 12)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("Validade:");

        jLabel6.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 12)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("CVV");

        jLabel5.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 12)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Número do cartão:");

        try {
            jFormattedTextField2.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("###")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }

        try {
            jFormattedTextField3.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##/##")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }

        try {
            jFormattedTextField4.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("############")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        jFormattedTextField4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jFormattedTextField4ActionPerformed(evt);
            }
        });

        jComboBox1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });

        jLabel9.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 12)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(255, 255, 255));
        jLabel9.setText("Tipo de cartão:");

        javax.swing.GroupLayout painelCartaoLayout = new javax.swing.GroupLayout(painelCartao);
        painelCartao.setLayout(painelCartaoLayout);
        painelCartaoLayout.setHorizontalGroup(
            painelCartaoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(painelCartaoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(painelCartaoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(painelCartaoLayout.createSequentialGroup()
                        .addComponent(jFormattedTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, 410, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(36, Short.MAX_VALUE))
                    .addGroup(painelCartaoLayout.createSequentialGroup()
                        .addComponent(jFormattedTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(24, 24, 24)
                        .addComponent(jFormattedTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(painelCartaoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel9)
                            .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE))))
            .addGroup(painelCartaoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(painelCartaoLayout.createSequentialGroup()
                    .addContainerGap()
                    .addGroup(painelCartaoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(painelCartaoLayout.createSequentialGroup()
                            .addComponent(jLabel6)
                            .addGap(92, 92, 92)
                            .addComponent(jLabel7))
                        .addComponent(jLabel5))
                    .addContainerGap(274, Short.MAX_VALUE)))
        );
        painelCartaoLayout.setVerticalGroup(
            painelCartaoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, painelCartaoLayout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addComponent(jFormattedTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel9)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(painelCartaoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jFormattedTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jFormattedTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(68, 68, 68))
            .addGroup(painelCartaoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(painelCartaoLayout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jLabel5)
                    .addGap(46, 46, 46)
                    .addGroup(painelCartaoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel6)
                        .addComponent(jLabel7))
                    .addContainerGap(95, Short.MAX_VALUE)))
        );

        painelCEP.setBackground(new java.awt.Color(255, 255, 255));
        painelCEP.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        try {
            jFormattedTextField1.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("#####-###")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }

        jLabel8.setFont(new java.awt.Font("Gill Sans MT", 1, 18)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setText("CEP de entrega:");

        javax.swing.GroupLayout painelCEPLayout = new javax.swing.GroupLayout(painelCEP);
        painelCEP.setLayout(painelCEPLayout);
        painelCEPLayout.setHorizontalGroup(
            painelCEPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(painelCEPLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(painelCEPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel8)
                    .addComponent(jFormattedTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 231, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        painelCEPLayout.setVerticalGroup(
            painelCEPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(painelCEPLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel8)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jFormattedTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout containerPagamentoLayout = new javax.swing.GroupLayout(containerPagamento);
        containerPagamento.setLayout(containerPagamentoLayout);
        containerPagamentoLayout.setHorizontalGroup(
            containerPagamentoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(containerPagamentoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(containerPagamentoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel3)
                    .addGroup(containerPagamentoLayout.createSequentialGroup()
                        .addComponent(jRadioButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jRadioButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(painelCartao, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(painelPIX, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(painelCEP, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(46, Short.MAX_VALUE))
        );
        containerPagamentoLayout.setVerticalGroup(
            containerPagamentoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, containerPagamentoLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(containerPagamentoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jRadioButton1)
                    .addComponent(jRadioButton2))
                .addGap(18, 18, 18)
                .addComponent(painelPIX, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(painelCartao, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addComponent(painelCEP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(130, 130, 130))
        );

        javax.swing.GroupLayout containerLayout = new javax.swing.GroupLayout(container);
        container.setLayout(containerLayout);
        containerLayout.setHorizontalGroup(
            containerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(containerLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(painelConfirmar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(49, 49, 49)
                .addComponent(containerPagamento, javax.swing.GroupLayout.PREFERRED_SIZE, 508, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(61, 61, 61))
        );
        containerLayout.setVerticalGroup(
            containerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(containerLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(containerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(painelConfirmar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(containerPagamento, javax.swing.GroupLayout.PREFERRED_SIZE, 413, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        getContentPane().add(container, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 70, 810, 400));

        image.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/imagem-fundo.png"))); // NOI18N
        getContentPane().add(image, new org.netbeans.lib.awtextra.AbsoluteConstraints(-80, -60, -1, 1010));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_formComponentShown

        boolean erroConhecido=false;
        
        if(!jRadioButton1.isSelected()){
            painelPIX.setVisible(false);
            jTextField1.setText(User.getPix());
        }   
         
       
        if(!jRadioButton2.isSelected())
           painelCartao.setVisible(false);
       
        try{
        
            items=puxarItens();
            listarTiposCartao();
            
            if(items.isEmpty()){
                erroConhecido=true;
                throw new Exception("Nenhum item foi encontrado no carrinho.");
            }
            
            DefaultListModel model=new DefaultListModel();
            jList1.setModel(model);
            model.clear();
            
            for(int i=0;i<items.size();i++){
            
                model.addElement("Produto: "+items.get(i)[3]);
            }
            
        } catch(Exception e){
        
            if(erroConhecido)
                labelError.setText(e.toString());
            
            else
                labelError.setText("Ocorreu um erro ao listar os produtos em seu carrinho.");
            
            System.err.println("Erro ao listar os produtos no carrinho: \n"+e);
        }
    }//GEN-LAST:event_formComponentShown

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        
        this.dispose();
        new Carrinho().setVisible(true);
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jRadioButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton1ActionPerformed
        
        if(jRadioButton1.isSelected()){
        
            painelPIX.setVisible(true);
            jRadioButton2.setSelected(false);
            painelCartao.setVisible(false);
        }
    }//GEN-LAST:event_jRadioButton1ActionPerformed

    private void jList1ComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_jList1ComponentShown
        
        
    }//GEN-LAST:event_jList1ComponentShown

    private void jRadioButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton2ActionPerformed
        
        if(jRadioButton2.isSelected()){
        
            painelCartao.setVisible(true);
            jRadioButton1.setSelected(false);
            painelPIX.setVisible(false);
        }
    }//GEN-LAST:event_jRadioButton2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        
        boolean erroConhecido=false;
        
        try{
            
            if(!validarCampos()){
            
                erroConhecido=true;
                labelError.setText("Você deve preencher todos os campos corretamente.");
                throw new Exception("Ha campos não preenchidos");
            }
            
            //if(jCheckBox1.isSelected()){;
        
                //boolean verifAlter=DatabaseMethods.alterUser(User.getCpf(), User.getEmail(), User.getNCelular(), User.getSenha(), jTextField1.getText(), User.getNome())!=0;
                
                //if(!verifAlter){
                    //erroConhecido=true;
                    //throw new Exception("Erro: o PIX não pode ser salvo.");
                //}
            //}
            
            float totalPedido=0;
            ArrayList<ItemPedido> itemsPedido=new ArrayList();
            
            for(Object[] item:items){
            
                int IDProduto=(int) item[2];
                int quantidade=(int) item[1];
                
                float precoItem = ((Number) item[4]).floatValue();
                float totalItem = precoItem * quantidade;
                totalPedido+=totalItem;
                System.out.println("totalpedido ta igual a: "+totalPedido);
                int IDItemCarrinho=(int) item[0];
                
                itemsPedido.add(new ItemPedido(IDProduto,quantidade,totalItem,IDItemCarrinho));
            }
            String cep=jFormattedTextField1.getText();
            String formaPagamento="";
            
            if(jRadioButton1.isSelected())
                formaPagamento="PIX";
            
            if(jRadioButton2.isSelected())
                formaPagamento="Crédito";
            
            LocalDate dataAtual=LocalDate.now();
            LocalDate dataEntrega=dataAtual;
            DateTimeFormatter formato=DateTimeFormatter.ofPattern("yyyy-MM-dd");
            

            char prefixo = cep.charAt(0);
            switch (prefixo) {
                case '0': dataEntrega = dataEntrega.plusDays(1); break;
                case '1': dataEntrega = dataEntrega.plusDays(2); break;
                case '2': case '3': dataEntrega = dataEntrega.plusDays(3); break;
                case '4': dataEntrega = dataEntrega.plusDays(4); break;
                case '5': dataEntrega = dataEntrega.plusDays(5); break;
                case '6': dataEntrega = dataEntrega.plusDays(6); break;
                case '7': dataEntrega = dataEntrega.plusDays(7); break;
                case '8': dataEntrega = dataEntrega.plusDays(8); break;
                case '9': dataEntrega = dataEntrega.plusDays(10); break;
            }
            
            int affectedRowsPedido=DatabaseMethods.insertItemPedido(cep, User.getId(), totalPedido, dataEntrega.format(formato), false, dataAtual.format(formato), formaPagamento,
                    itemsPedido);
            if(affectedRowsPedido==0){
                erroConhecido=true;
                throw new Exception("Erro ao confirmar o pedido, não foi possível realizar a inserção.");
            }
            
            this.dispose();
            new PedidoConfirmado().setVisible(true);
            
        } catch(Exception e){
        
            if(!erroConhecido)
                labelError.setText("Erro ao confirmar o pedido.");
            
            System.err.println(e);
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jFormattedTextField4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jFormattedTextField4ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jFormattedTextField4ActionPerformed

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBox1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Pedido.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Pedido.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Pedido.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Pedido.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Pedido().setVisible(true);
            }
        });
    }
    
    @SuppressWarnings("empty-statement")
    public boolean validarCampos(){
    
        if (jRadioButton1.isSelected() && (jTextField1.getText() == null || jTextField1.getText().trim().isEmpty())) {
            return false;
        }

        if (jRadioButton2.isSelected()) {
            if (jFormattedTextField2.getText() == null || jFormattedTextField3.getText() == null || jFormattedTextField4.getText() == null)
                return false;
            
            if(jFormattedTextField4.getText().length()<12){
            
                return false;
            }
            
            if(jFormattedTextField2.getText().length()<3){
            
                return false;
            }
            
            if(jFormattedTextField3.getText().length()<5){
            
                return false;
            }
        }

        String cepFormatado = jFormattedTextField1.getText().replaceAll("[^0-9]", "");
        if (jFormattedTextField1.getText() == null || cepFormatado.length() < 8)
            return false;

        return true;
    }
    
        public ArrayList<Object[]> puxarItens(){
    
        try{
            
            ResultSet itemsCartRegisters=DatabaseMethods.UserItemsCartQuery(User.getId());
            ArrayList<Object[]> armazenarItens=new ArrayList<>();
            
            while(itemsCartRegisters.next()){
            
                int puxarIDItemCarrinho=itemsCartRegisters.getInt("id_item_carrinho");
                int puxarQuantidade=itemsCartRegisters.getInt("item_carrinho.quantidade");
                int puxarIDProduto=itemsCartRegisters.getInt("produtos.id_produtos");
                String puxarNomeProduto=itemsCartRegisters.getString("produtos.nome");
                float puxarPreco=itemsCartRegisters.getFloat("produtos.preco");
                int puxarCorID=itemsCartRegisters.getInt("produtos.cores_id_cor");
                String puxarNomeCor=itemsCartRegisters.getString("cores.nome");
                int puxarEstoque=itemsCartRegisters.getInt("produtos.estoque");
                int puxarIDCarrinho=itemsCartRegisters.getInt("carrinho.id_carrinho");
                
                armazenarItens.add(new Object[]{puxarIDItemCarrinho,puxarQuantidade,puxarIDProduto,puxarNomeProduto,puxarPreco,puxarCorID,puxarNomeCor,puxarEstoque,puxarIDCarrinho});
            }
  
            return armazenarItens;
            
        } catch(Exception e){
        
            System.err.println("Erro ao executar a função de puxar itens: "+e);
            return null;
        }
    }
        
    public void listarTiposCartao(){
    
        try{
        
            ResultSet cardTypesRegister=DatabaseMethods.cardTypeQuery();
            DefaultComboBoxModel<String> model=new DefaultComboBoxModel<>();
            
            while(cardTypesRegister.next()){
            
                String tipo=cardTypesRegister.getString("tipo");
                
                model.addElement(tipo);
            }
            
            jComboBox1.setModel(model);
            
            
        } catch(Exception e){
        
            labelError.setText("Não foi possível listar os tipos de cartão.");
            System.err.println("erro: \n"+e);
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel container;
    private javax.swing.JPanel containerPagamento;
    private javax.swing.JLabel image;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JFormattedTextField jFormattedTextField1;
    private javax.swing.JFormattedTextField jFormattedTextField2;
    private javax.swing.JFormattedTextField jFormattedTextField3;
    private javax.swing.JFormattedTextField jFormattedTextField4;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JList<String> jList1;
    private javax.swing.JRadioButton jRadioButton1;
    private javax.swing.JRadioButton jRadioButton2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JLabel labelError;
    private javax.swing.JPanel painelCEP;
    private javax.swing.JPanel painelCartao;
    private javax.swing.JPanel painelConfirmar;
    private javax.swing.JPanel painelPIX;
    // End of variables declaration//GEN-END:variables
}
